{"version":3,"sources":["assets/noImageAvailable.jpg","components/Navigation.js","components/MovieOption.js","components/SearchResults.js","components/UserNominations.js","components/TopNominations.js","components/Banner.js","components/Footer.js","components/Firebase.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","props","handleSearch","handleSignInAndRegister","isLoggedIn","useState","query","setQuery","className","action","onSubmit","e","htmlFor","id","type","required","placeholder","onChange","target","value","onClick","MovieOption","isNominee","setIsNominee","poster","title","year","addNomination","userNominations","removeNominee","tally","useEffect","length","map","nomObj","nominee","src","require","alt","SearchResults","searchMessage","results","closeSearch","movie","index","Poster","Title","Year","imdbID","key","UserNominations","TopNominations","publicNominations","showArrows","infiniteLoop","autoPlay","swipeable","dynamicHeight","showStatus","slice","Banner","Footer","href","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","setResults","isSearching","setIsSearching","setSearchMessage","setIsLoggedIn","setPublicNominations","currUser","setCurrUser","setUserNominations","fiveNominees","setFiveNominees","database","ref","on","snapshot","nominationsdata","val","allNominations","updatedNominations","push","sort","a","b","updatedUserNominations","users","username","nominations","i","downloadUserNominations","download","waitForDownload","then","status","checkNominations","dbRef","userKey","once","data","toUpperCase","swal","fire","scrollbarPadding","icon","text","newNominations","child","update","updateAllNominations","filter","allNomRef","nomKey","prevTally","window","location","reload","showCancelButton","confirmButtonText","cancelButtonText","result","credentialsPrompt","dismiss","DismissReason","cancel","signMethod","password","credentials","html","preConfirm","user","document","getElementById","pass","promptArr","registerUser","checkReg","validRegistration","validity","logUserIn","checkLog","validLogin","credentialsError","error","credentialsSuccess","success","newStuff","usernameFree","correctSignIn","preventDefault","axios","url","method","responseType","params","s","plot","response","Error","Search","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.22e99732.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noImageAvailable.625d1aff.jpg\";","import React, { useState } from \"react\";\r\n\r\nconst Navigation = (props) => {\r\n  const {\r\n    handleSearch,\r\n    handleSignInAndRegister,\r\n    isLoggedIn,\r\n  } = props;\r\n  // checks for when user clicks to search\r\n  const [userSearching, setUserSearching] = useState(false);\r\n  const [query, setQuery] = useState(\"\");\r\n  //   toggle the default title or search style navigation\r\n  const toggleSearch = () => {\r\n    setUserSearching(!userSearching);\r\n  };\r\n\r\n  const handleInput = (e) => {\r\n    setQuery(e.target.value);\r\n  };\r\n\r\n  const defferedSearch = (e) => {\r\n    handleSearch(e, query);\r\n  };\r\n\r\n  return (\r\n    <nav className=\" flexParent flexColumn navigation\">\r\n      <h1>The Shoppies</h1>\r\n      <p>Nominate your 5 all time favourite movies!</p>\r\n      <div className=\"flexParent menuOptions\">\r\n        <div className=\"flexParent searchContainer\">\r\n          <form className=\"flexParent\" action=\"\" onSubmit={defferedSearch}>\r\n            <label htmlFor=\"movieSearch\"></label>\r\n            <input\r\n              id=\"movieSearch\"\r\n              className=\"movieSearch\"\r\n              type=\"search\"\r\n              required\r\n              placeholder=\"Search movies\"\r\n              onChange={handleInput}\r\n            />\r\n            <button className=\"searchButton\" type=\"submit\">\r\n              <i className=\"fas fa-search\"></i>\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <button className=\"account\" onClick={handleSignInAndRegister}>\r\n          {isLoggedIn === false ? \"Sign In/Up\" : \"Sign Out\"}\r\n        </button>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst MovieOption = (props) => {\r\n  const [isNominee, setIsNominee] = useState(false);\r\n\r\n  const {\r\n    poster,\r\n    title,\r\n    year,\r\n    id,\r\n    handleSignInAndRegister,\r\n    addNomination,\r\n    isLoggedIn,\r\n    userNominations,\r\n    removeNominee,\r\n    tally,\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    if (userNominations.length > 0) {\r\n      userNominations.map((nomObj) => {\r\n        if (nomObj.id === id) {\r\n          setIsNominee(true);\r\n        }\r\n      });\r\n    }\r\n  }, [userNominations]);\r\n\r\n  const handleNominate = () => {\r\n    addNomination(nominee);\r\n    if(userNominations.length===5){\r\n      setIsNominee(false);\r\n    } else {\r\n      setIsNominee(true);\r\n    }\r\n  };\r\n\r\n  const handleRemoveNominee = () => {\r\n    removeNominee(nominee);\r\n    setIsNominee(false);\r\n  };\r\n\r\n  const nominee = {\r\n    poster: poster,\r\n    title: title,\r\n    id: id,\r\n    year: year,\r\n    tally: tally,\r\n  };\r\n  return (\r\n    <ul className=\"flexParent flexColumn movieOption\">\r\n      <li className=\"flexParent imgContainer\">\r\n        {\r\n          // if ther is no pic than put default no image available\r\n          poster === \"N/A\" ? (\r\n            <img\r\n              src={require(\"../assets/noImageAvailable.jpg\")}\r\n              alt={`Poster for: ${title}`}\r\n            />\r\n          ) : (\r\n            <img src={poster} alt={`Poster for: ${title}`} />\r\n          )\r\n        }\r\n        <div className=\"movieDetails\">\r\n          <h3>{title}</h3>\r\n          <p>{year}</p>\r\n        </div>\r\n      </li>\r\n      {tally > 0 && (\r\n        <li className=\"flexParent tally\">\r\n          <i className=\"fas fa-award\"></i>\r\n          <p>{tally}</p>\r\n        </li>\r\n      )}\r\n      <li className=\"nominateButton\">\r\n        {isNominee === true && (\r\n          <button className=\"swal2-styled\" onClick={handleRemoveNominee}>\r\n            Remove\r\n          </button>\r\n        )}\r\n        {isNominee === false && (\r\n          <button\r\n            className=\"swal2-styled\"\r\n            onClick={\r\n              // Is user loggedin? if not ask to sign in, if they are check if the remove func was passed meaning it is an option on the nomination page if not then keep handle func\r\n              isLoggedIn === true ? handleNominate : handleSignInAndRegister\r\n            }\r\n          >\r\n            Nominate\r\n          </button>\r\n        )}\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default MovieOption;\r\n","import React from \"react\";\r\nimport MovieOption from \"./MovieOption\";\r\n\r\nconst SearchResults = (props) => {\r\n  const {\r\n    searchMessage,\r\n    results,\r\n    handleSignInAndRegister,\r\n    isLoggedIn,\r\n    addNomination,\r\n    removeNominee,\r\n    userNominations,\r\n    closeSearch,\r\n  } = props;\r\n\r\n    const handleCloseSearch = () => {\r\n      closeSearch();\r\n    };\r\n\r\n  return (\r\n    <section className=\"wrapper\">\r\n      <h2>{searchMessage}</h2>\r\n      <div className=\"flexParent closeContainer\">\r\n        <p>Tap \"X\" to close! </p>\r\n        <button className=\"toggleSearch\" onClick={handleCloseSearch}>\r\n          <i className=\"fas fa-times\"></i>\r\n        </button>\r\n      </div>\r\n      {results.length > 0 &&\r\n      <ul className=\"flexParent flexWrap\"> {results.map((movie, index) => {\r\n          const { Poster, Title, Year, imdbID } = movie;\r\n          return (\r\n            <li>\r\n              <MovieOption\r\n                key={index}\r\n                id={imdbID}\r\n                title={Title}\r\n                poster={Poster}\r\n                year={Year}\r\n                handleSignInAndRegister={handleSignInAndRegister}\r\n                isLoggedIn={isLoggedIn}\r\n                addNomination={addNomination}\r\n                removeNominee={removeNominee}\r\n                userNominations={userNominations}\r\n                tally={0}\r\n              />\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n        }\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SearchResults;\r\n","import React from \"react\";\r\nimport MovieOption from \"./MovieOption.js\";\r\n\r\nconst UserNominations = (props) => {\r\n  const { userNominations, removeNominee } = props;\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <h2>Your Nominations</h2>\r\n      {userNominations.length === 0 && (\r\n        <p>You havent picked any nominees yet!</p>\r\n      )}\r\n      {userNominations.length > 0 && (\r\n        <ul className=\"flexParent flexWrap\">\r\n          {userNominations.map((nominee, index) => {\r\n            const { poster, title, year, id } = nominee;\r\n            return (\r\n              <li>\r\n                <MovieOption\r\n                  key={index}\r\n                  poster={poster}\r\n                  title={title}\r\n                  id={id}\r\n                  year={year}\r\n                  removeNominee={removeNominee}\r\n                  userNominations={userNominations}\r\n                  tally={0}\r\n                />\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserNominations;\r\n","\r\nimport React from \"react\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport { Carousel } from \"react-responsive-carousel\";\r\n\r\n// carosel for the top nominations\r\nconst TopNominations = (props) => {\r\n\r\n    const {publicNominations} = props;\r\n\r\n    return (\r\n      <section className=\"topNominations\">\r\n        <Carousel\r\n          showArrows={true}\r\n          infiniteLoop={true}\r\n          autoPlay={true}\r\n          swipeable={true}\r\n          dynamicHeight={false}\r\n          showStatus={false}\r\n        >\r\n          {publicNominations.slice(0, 3).map((nomObj, index) => {\r\n              const {title, poster, tally} = nomObj;\r\n              return (\r\n                <div className=\"flexParent topContainer\">\r\n                  <ul className=\"flexParent\">\r\n                    <li className=\"flexParent imgLI\">\r\n                      <div className=\"flexParent topImgContainer\">\r\n                        {poster === \"N/A\" ? (\r\n                          <img\r\n                            src={require(\"../assets/noImageAvailable.jpg\")}\r\n                            alt={`Poster for: ${title}`}\r\n                          />\r\n                        ) : (\r\n                          <img src={poster} alt={`Poster for: ${title}`} />\r\n                        )}\r\n                      </div>\r\n                    </li>\r\n                    <li className=\"topDetails flexParent\">\r\n                      <div className=\"detailCard\">\r\n                      <p>#{index+1}</p>\r\n                        <p>\r\n                          <i className=\"fas fa-award\"></i> \r\n                          {tally}\r\n                        </p>\r\n                        <p>{title}</p>\r\n                      </div>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              );\r\n          })}\r\n        </Carousel>\r\n      </section>\r\n    );\r\n}\r\n\r\nexport default TopNominations;\r\n\r\n","import React from \"react\";\r\n\r\nconst Banner = () => {\r\n    return(\r\n        <div className=\"banner\">\r\n            <h2>Max Nominations Limit Reached!</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Banner;","import React from \"react\";\r\n\r\nconst Footer = () => {\r\nreturn (\r\n    <footer className=\"flexParent\">\r\n      <p>\r\n        © 2020 Submission for Shopify Winter 2021 Internship. Designed and Coded by:  \r\n        <a href=\"https://kajanthkumar.com/\" target=\"blank\">\r\n          Kajanth Kumar\r\n        </a>\r\n      </p>\r\n    </footer>\r\n);\r\n}\r\n\r\nexport default Footer;","import firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCku0CL-1JzPVdi-8qzYwUJifsPzKbgsRc\",\r\n  authDomain: \"shoppies-116db.firebaseapp.com\",\r\n  databaseURL: \"https://shoppies-116db.firebaseio.com\",\r\n  projectId: \"shoppies-116db\",\r\n  storageBucket: \"shoppies-116db.appspot.com\",\r\n  messagingSenderId: \"76445350094\",\r\n  appId: \"1:76445350094:web:189725267c077875eb789f\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport axios from \"axios\";\r\nimport Navigation from \"./components/Navigation\";\r\nimport SearchResults from \"./components/SearchResults\";\r\nimport MovieOption from \"./components/MovieOption\";\r\nimport UserNominations from \"./components/UserNominations\";\r\nimport TopNominations from \"./components/TopNominations\"\r\nimport Banner from \"./components/Banner\";\r\nimport Footer from \"./components/Footer\";\r\nimport firebase from \"./components/Firebase\";\r\nimport swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst App = () => {\r\n  // state variables\r\n  // search results\r\n  const [results, setResults] = useState([]);\r\n  // check if user is searching\r\n  const [isSearching, setIsSearching] = useState(false);\r\n  // message informing if there were any results\r\n  const [searchMessage, setSearchMessage] = useState(\"\");\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [publicNominations, setPublicNominations] = useState([]);\r\n  // current username\r\n  const [currUser, setCurrUser] = useState(\"\");\r\n  // current users nominations\r\n  const [userNominations, setUserNominations] = useState([]);\r\n  // boolean to check if user has 5 nominees assume not full\r\n  const [fiveNominees, setFiveNominees] = useState(false);\r\n\r\n  // functions\r\n\r\n  // function to run when component mounts (ie gather user data and new nominations)\r\n  useEffect(() => {\r\n    const dbRef = firebase.database().ref();\r\n    dbRef.on(\"value\", (snapshot) => {\r\n      const nominationsdata = snapshot.val().allNominations;\r\n      const updatedNominations = [];\r\n      for (let key in nominationsdata) {\r\n        if (nominationsdata[key].tally > 0) {\r\n          updatedNominations.push(nominationsdata[key]);\r\n        }\r\n      }\r\n      //sort public nominations by votes\r\n      updatedNominations.sort((a, b) => b.tally - a.tally);\r\n      setPublicNominations(updatedNominations);\r\n      // update loggedin users personal nominations\r\n      if (isLoggedIn === true) {\r\n        const updatedUserNominations = [];\r\n        const users = snapshot.val().users;\r\n        for (let key in users) {\r\n          if (users[key].username === currUser) {\r\n            if (users[key].username.nominations) {\r\n              // check if user has five nominees\r\n              if (users[key].username.nominations.length === 5) {\r\n                setFiveNominees(true);\r\n              }\r\n              // update the nominee list\r\n              for (\r\n                let i = 0;\r\n                i < users[key].username.nominations.length - 1;\r\n                i++\r\n              ) {\r\n                updatedUserNominations.push(users[key].username.nominations[i]);\r\n              }\r\n            }\r\n            setUserNominations(updatedUserNominations);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   async function checkFive() {\r\n  //       let check = await checkNominations();\r\n  //       return check;\r\n  //   }\r\n  //   checkFive().then(()=> {});\r\n      \r\n  // }, [userNominations])\r\n\r\n  // hook to update users page when loggedin\r\n  useEffect(() => {\r\n    async function waitForDownload() {\r\n      let download = await downloadUserNominations();\r\n      return download;\r\n    }\r\n    waitForDownload().then((status) => {});\r\n  }, [currUser]);\r\n\r\n  const handleSearch = (e, query) => {\r\n    setResults([]);\r\n    setIsSearching(true);\r\n    e.preventDefault();\r\n    axios({\r\n      url: \"http://www.omdbapi.com/?i=tt3896198&apikey=5f442a30\",\r\n      method: \"GET\",\r\n      responseType: \"json\",\r\n      params: {\r\n        s: query,\r\n        plot: \"Short\",\r\n        type: \"movie\",\r\n      },\r\n    }).then((response) => {\r\n      if (response.data.Error === \"Movie not found!\") {\r\n        setSearchMessage(`Sorry, could not find results for: ${query}`);\r\n      } else {\r\n        setSearchMessage(\r\n          `Found ${response.data.Search.length} results for : ${query}`\r\n        );\r\n        setResults(response.data.Search);\r\n      }\r\n    });\r\n  };\r\n\r\n  const closeSearch = () => {\r\n    setIsSearching(false);\r\n    setSearchMessage(\"\");\r\n  };\r\n  \r\n  const checkNominations = (action) => {\r\n    // this is my hacky solution to make it work\r\n    if (action === \"add\"){\r\n    if (userNominations.length >= 4) {\r\n      setFiveNominees(true);\r\n    } else {\r\n      setFiveNominees(false);\r\n    }\r\n    } else {\r\n    if (userNominations.length > 4) {\r\n      setFiveNominees(false);\r\n    } else {\r\n      setFiveNominees(true);\r\n    }\r\n    }\r\n  }\r\n\r\n  const addNomination = (nominee) => {\r\n    const dbRef = firebase.database().ref();\r\n    let userKey = \"\";\r\n    checkNominations(\"add\");\r\n    dbRef.once(\"value\", (snapshot) => {\r\n      const data = snapshot.val().users;\r\n      // if not full nominations\r\n      if (fiveNominees === false) {\r\n        for (let key in data) {\r\n          if (currUser.toUpperCase() === data[key].username.toUpperCase()) {\r\n            userKey = key;\r\n            break;\r\n          }\r\n        }\r\n      } else {\r\n        swal.fire({\r\n          scrollbarPadding: false,\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: \"You cant nominate more than 5 times! Please remove a nomination.\",\r\n        });\r\n      }\r\n    });\r\n    if(userKey!==\"\"){\r\n      const newNominations = userNominations;\r\n      newNominations.push(nominee);\r\n      const userRef = dbRef.child(\"users\").child(userKey);\r\n      userRef.update({ nominations: newNominations });\r\n      updateAllNominations(nominee, \"add\");\r\n    }\r\n    \r\n  };\r\n\r\n  const removeNominee = (nominee) => {\r\n    const dbRef = firebase.database().ref();\r\n    let userKey = \"\";\r\n    dbRef.once(\"value\", (snapshot) => {\r\n      const data = snapshot.val().users;\r\n      for (let key in data) {\r\n        if (currUser.toUpperCase() === data[key].username.toUpperCase()) {\r\n          userKey = key;\r\n          break;\r\n        }\r\n      }\r\n    });\r\n    const newNominations = userNominations.filter((nomObj) => {\r\n      return nomObj.id !== nominee.id;\r\n    });\r\n    setUserNominations(newNominations);\r\n    const userRef = dbRef.child(\"users\").child(userKey);\r\n    userRef.update({ nominations: newNominations });\r\n    updateAllNominations(nominee, \"remove\");\r\n    checkNominations(\"REMOVING\");\r\n  };\r\n\r\n  // function to update the tallies on all nominations from all users\r\n  const updateAllNominations = (nominee, action) => {\r\n    const { poster, title, year, id } = nominee;\r\n    const dbRef = firebase.database().ref();\r\n    const allNomRef = dbRef.child(\"allNominations\");\r\n    let nomKey = \"\";\r\n    let prevTally = 0;\r\n    dbRef.once(\"value\", (snapshot) => {\r\n      const data = snapshot.val().allNominations;\r\n      for (let key in data) {\r\n        if (nominee.id === data[key].id) {\r\n          nomKey = key;\r\n          prevTally = data[key].tally;\r\n          break;\r\n        }\r\n      }\r\n    });\r\n    if (nomKey !== \"\" && action === \"remove\" && prevTally > 0) {\r\n      allNomRef.child(nomKey).update({ tally: prevTally - 1 });\r\n    } else if (nomKey !== \"\" && action === \"add\") {\r\n      allNomRef.child(nomKey).update({ tally: prevTally + 1 });\r\n    } else {\r\n      allNomRef.push({\r\n        poster: poster,\r\n        title: title,\r\n        year: year,\r\n        id: id,\r\n        tally: 1,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSignInAndRegister = () => {\r\n    if (isLoggedIn === true) {\r\n      window.location.reload(true);\r\n    } else {\r\n      swal\r\n        .fire({\r\n          scrollbarPadding: false,\r\n          title: `Sign In or Register`,\r\n          showCancelButton: true,\r\n          confirmButtonText: `Sign In`,\r\n          cancelButtonText: `Register`,\r\n        })\r\n        .then((result) => {\r\n          if (result.value) {\r\n            credentialsPrompt(\"Sign In\");\r\n          } else if (result.dismiss === swal.DismissReason.cancel) {\r\n            credentialsPrompt(\"Register\");\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  const credentialsPrompt = async (signMethod) => {\r\n    const promptArr = [];\r\n    let username = \"\";\r\n    let password = \"\";\r\n    const credentials = () => {\r\n      swal\r\n        .fire({\r\n          scrollbarPadding: false,\r\n          title: signMethod,\r\n          html: `<input id='username' class=\"swal2-input\" required type='email' placeholder=\"your username ...\" value=${username}> <br/> <input class=\"swal2-input\" required id='password' type='password' value='${password}' placeholder=\"your password ...\">`,\r\n          showCancelButton: true,\r\n          confirmButtonText: signMethod,\r\n          preConfirm: () => ({\r\n            user: document.getElementById(\"username\").value,\r\n            pass: document.getElementById(\"password\").value,\r\n          }),\r\n        })\r\n        .then((result) => {\r\n          if (result.value) {\r\n            const { user, pass } = result.value;\r\n            username = user;\r\n            password = pass;\r\n            if (user === \"\" || pass === \"\") {\r\n              promptArr[1](\"You can't have empty fields!\");\r\n            } else {\r\n              if (signMethod === \"Register\") {\r\n                async function validRegistration() {\r\n                  let checkReg = await registerUser(username, password);\r\n                  return checkReg;\r\n                }\r\n                validRegistration().then((validity) => {\r\n                  validity === true\r\n                    ? promptArr[2](\"Registered Successfully!\")\r\n                    : promptArr[1](\"Username already exists!\");\r\n                });\r\n              } else if (signMethod === \"Sign In\") {\r\n                async function validLogin() {\r\n                  let checkLog = await logUserIn(username, password);\r\n                  return checkLog;\r\n                }\r\n                validLogin().then((validity) => {\r\n                  validity === true\r\n                    ? promptArr[2](\"Signed In Successfully!\")\r\n                    : promptArr[1](\"Incorrect Username/Password!\");\r\n                });\r\n              }\r\n            }\r\n          } else if (result.dismiss === swal.DismissReason.cancel) {\r\n          }\r\n        });\r\n    };\r\n    promptArr.push(credentials);\r\n\r\n    const credentialsError = (error) => {\r\n      swal\r\n        .fire({\r\n          scrollbarPadding: false,\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: error,\r\n          showCancelButton: true,\r\n          cancelButtonText: \"Back\",\r\n        })\r\n        .then((result) => {\r\n          if (result.dismiss === swal.DismissReason.cancel) {\r\n            promptArr[0]();\r\n          }\r\n        });\r\n    };\r\n    promptArr.push(credentialsError);\r\n\r\n    const credentialsSuccess = (success) => {\r\n      swal.fire({\r\n        scrollbarPadding: false,\r\n        icon: \"success\",\r\n        title: \"Success\",\r\n        text: success,\r\n        showCancelButton: false,\r\n      });\r\n    };\r\n    promptArr.push(credentialsSuccess);\r\n\r\n    // to call a function just promptArr[desiredCall](params)\r\n    promptArr[0]();\r\n  };\r\n\r\n  // downloads the users nominations\r\n  const downloadUserNominations = async () => {\r\n    let newStuff = [];\r\n    const dbRef = await firebase\r\n      .database()\r\n      .ref()\r\n      .once(\"value\", (snapshot) => {\r\n        // in the data go to the users key\r\n        const data = snapshot.val().users;\r\n        for (let key in data) {\r\n          // when they log in set each users nominations\r\n          if (currUser.toUpperCase() === data[key].username.toUpperCase()) {\r\n            if (data[key].nominations) {\r\n              setUserNominations(data[key].nominations);\r\n              newStuff = userNominations;\r\n            }\r\n          }\r\n        }\r\n      });\r\n    return newStuff;\r\n  };\r\n\r\n  // function to register new users with unique usernames returns true if a username is available and has now been registered successfully\r\n  const registerUser = async (username, password) => {\r\n    let usernameFree = true;\r\n    const dbref = await firebase\r\n      .database()\r\n      .ref()\r\n      .once(\"value\", (snapshot) => {\r\n        // in the data go to the users key\r\n        const data = snapshot.val().users;\r\n        for (let key in data) {\r\n          // since ther is no ignoreCase method in javaScript use upper instead\r\n          if (username.toUpperCase() === data[key].username.toUpperCase()) {\r\n            usernameFree = false;\r\n            break;\r\n          }\r\n        }\r\n        if (usernameFree === true) {\r\n          const dbRef2 = firebase.database().ref(\"users/\");\r\n          dbRef2.push({\r\n            username: username,\r\n            password: password,\r\n            nominations: [],\r\n          });\r\n          setCurrUser(username);\r\n          setIsLoggedIn(true);\r\n        }\r\n      });\r\n    return usernameFree;\r\n  };\r\n\r\n  //function to verify login\r\n  const logUserIn = async (username, password) => {\r\n    let correctSignIn = false;\r\n    const dbref = await firebase\r\n      .database()\r\n      .ref()\r\n      .once(\"value\", (snapshot) => {\r\n        // in the data go to the users key\r\n        const data = snapshot.val().users;\r\n        for (let key in data) {\r\n          if (\r\n            username === data[key].username &&\r\n            password === data[key].password\r\n          ) {\r\n            setCurrUser(username);\r\n            setIsLoggedIn(true);\r\n            checkNominations();\r\n            correctSignIn = true;\r\n          }\r\n        }\r\n      });\r\n    return correctSignIn;\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Navigation\r\n        isLoggedIn={isLoggedIn}\r\n        handleSearch={handleSearch}\r\n        closeSearch={closeSearch}\r\n        handleSignInAndRegister={handleSignInAndRegister}\r\n      />\r\n      {publicNominations.length > 0 && isSearching === false && (\r\n        <TopNominations\r\n          handleSignInAndRegister={handleSignInAndRegister}\r\n          publicNominations={publicNominations}\r\n        />\r\n      )}\r\n      {isSearching === true && (\r\n        <SearchResults\r\n          results={results}\r\n          searchMessage={searchMessage}\r\n          handleSignInAndRegister={handleSignInAndRegister}\r\n          addNomination={addNomination}\r\n          isLoggedIn={isLoggedIn}\r\n          userNominations={userNominations}\r\n          closeSearch={closeSearch}\r\n          removeNominee={removeNominee}\r\n        />\r\n      )}\r\n      {fiveNominees === true && <Banner />}\r\n      {isSearching === false && isLoggedIn === true && (\r\n        <UserNominations\r\n          userNominations={userNominations}\r\n          removeNominee={removeNominee}\r\n        />\r\n      )}\r\n      {isSearching === false && (\r\n        <section className=\"wrappper publicNominations\">\r\n          <h2>Public Nominations</h2>\r\n          <div className=\"flexParent publicList\">\r\n            {publicNominations.map((nomObj, index) => {\r\n              const {\r\n                poster: poster,\r\n                title: title,\r\n                id: id,\r\n                year: year,\r\n                tally: tally,\r\n              } = nomObj;\r\n              return (\r\n                <MovieOption\r\n                  key={index}\r\n                  id={id}\r\n                  title={title}\r\n                  poster={poster}\r\n                  year={year}\r\n                  handleSignInAndRegister={handleSignInAndRegister}\r\n                  isLoggedIn={isLoggedIn}\r\n                  addNomination={addNomination}\r\n                  removeNominee={removeNominee}\r\n                  userNominations={userNominations}\r\n                  tally={tally}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </section>\r\n      )}\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}