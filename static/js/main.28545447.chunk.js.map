{"version":3,"sources":["assets/noImageAvailable.jpg","components/Navigation.js","components/MovieOption.js","components/SearchResults.js","components/UserNominations.js","components/TopNominations.js","components/Banner.js","components/Footer.js","components/Firebase.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","props","handleSearch","handleSignInAndRegister","isLoggedIn","useState","query","setQuery","className","action","onSubmit","e","htmlFor","id","type","required","placeholder","onChange","target","value","onClick","MovieOption","isNominee","setIsNominee","poster","title","year","addNomination","userNominations","removeNominee","tally","useEffect","length","map","nomObj","nominee","src","require","alt","SearchResults","searchMessage","results","closeSearch","movie","index","Poster","Title","Year","imdbID","key","UserNominations","theNominations","setTheNominations","TopNominations","publicNominations","showArrows","infiniteLoop","autoPlay","swipeable","dynamicHeight","showStatus","slice","Banner","Footer","href","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","setResults","isSearching","setIsSearching","setSearchMessage","setIsLoggedIn","setPublicNominations","currUser","setCurrUser","setUserNominations","fiveNominees","setFiveNominees","swalShopify","swal","mixin","confirmButtonColor","database","ref","on","snapshot","nominationsdata","val","allNominations","updatedNominations","push","sort","a","b","updatedUserNominations","users","username","nominations","i","downloadUserNominations","download","waitForDownload","then","status","checkNominations","dbRef","userKey","once","data","toUpperCase","fire","scrollbarPadding","icon","text","newNominations","child","update","updateAllNominations","filter","allNomRef","nomKey","prevTally","window","location","reload","showCancelButton","confirmButtonText","cancelButtonText","result","credentialsPrompt","dismiss","DismissReason","cancel","signMethod","password","credentials","html","preConfirm","user","document","getElementById","pass","promptArr","registerUser","checkReg","validRegistration","validity","logUserIn","checkLog","validLogin","credentialsError","error","credentialsSuccess","success","newStuff","usernameFree","correctSignIn","preventDefault","axios","url","method","responseType","params","s","plot","response","Error","Search","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"wFAAAA,EAAOC,QAAU,IAA0B,8C,wNCiD5BC,EA/CI,SAACC,GAAW,IACrBC,EAAsDD,EAAtDC,aAAcC,EAAwCF,EAAxCE,wBAAyBC,EAAeH,EAAfG,WADnB,EAGcC,oBAAS,GAHvB,gCAIFA,mBAAS,KAJP,mBAIrBC,EAJqB,KAIdC,EAJc,KAkB5B,OACE,yBAAKC,UAAU,qCACb,yCACA,yEACA,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,8BACb,0BAAMA,UAAU,aAAaC,OAAO,GAAGC,SAVxB,SAACC,GACtBT,EAAaS,EAAGL,KAUR,2BAAOM,QAAQ,gBACf,2BACEC,GAAG,cACHL,UAAU,cACVM,KAAK,SACLC,UAAQ,EACRC,YAAY,gBACZC,SAtBQ,SAACN,GACnBJ,EAASI,EAAEO,OAAOC,UAuBV,4BAAQX,UAAU,eAAeM,KAAK,UACpC,uBAAGN,UAAU,qBAInB,4BAAQA,UAAU,UAAUY,QAASjB,IACnB,IAAfC,EAAuB,aAAe,eCqDlCiB,EA7FK,SAACpB,GAAW,IAAD,EACKI,oBAAS,GADd,mBACtBiB,EADsB,KACXC,EADW,KAI3BC,EAUEvB,EAVFuB,OACAC,EASExB,EATFwB,MACAC,EAQEzB,EARFyB,KACAb,EAOEZ,EAPFY,GACAV,EAMEF,EANFE,wBACAwB,EAKE1B,EALF0B,cACAvB,EAIEH,EAJFG,WACAwB,EAGE3B,EAHF2B,gBACAC,EAEE5B,EAFF4B,cACAC,EACE7B,EADF6B,MAGFC,qBAAU,WACJH,EAAgBI,OAAS,GAC3BJ,EAAgBK,KAAI,SAACC,GACfA,EAAOrB,KAAOA,GAChBU,GAAa,QAIlB,CAACK,IAEJ,IAcMO,EAAU,CACdX,OAAQA,EACRC,MAAOA,EACPZ,GAAIA,EACJa,KAAMA,EACNI,MAAOA,GAET,OACE,wBAAItB,UAAU,qCACZ,wBAAIA,UAAU,2BAGC,QAAXgB,EACE,yBACEY,IAAKC,EAAQ,IACbC,IAAG,sBAAiBb,KAGtB,yBAAKW,IAAKZ,EAAQc,IAAG,sBAAiBb,KAG1C,yBAAKjB,UAAU,gBACb,4BAAKiB,GACL,2BAAIC,KAGPI,EAAQ,GACP,wBAAItB,UAAU,oBACZ,uBAAGA,UAAU,iBACb,2BAAIsB,IAGR,wBAAItB,UAAU,mBACG,IAAdc,GACC,4BAAQd,UAAU,eAAeY,QAvCb,WAC1BS,EAAcM,GACdZ,GAAa,KAqCP,WAIa,IAAdD,GACC,4BACEd,UAAU,eACVY,SACiB,IAAfhB,EAxDW,WAClBwB,EAAgBI,OAAO,KAAM,EAC9BT,GAAa,GAEbA,GAAa,GAEfI,EAAcQ,IAkDmChC,GAH3C,eCxBKoC,EAtDO,SAACtC,GAAW,IAE9BuC,EAQEvC,EARFuC,cACAC,EAOExC,EAPFwC,QACAtC,EAMEF,EANFE,wBACAC,EAKEH,EALFG,WACAuB,EAIE1B,EAJF0B,cACAE,EAGE5B,EAHF4B,cACAD,EAEE3B,EAFF2B,gBACAc,EACEzC,EADFyC,YAOF,OACE,6BAASlC,UAAU,WACjB,4BAAKgC,GACL,yBAAKhC,UAAU,6BACb,iDACA,4BAAQA,UAAU,eAAeY,QATb,WACxBsB,MASM,uBAAGlC,UAAU,mBAGhBiC,EAAQT,OAAS,GAChB,wBAAIxB,UAAU,uBACX,IACAiC,EAAQR,KAAI,SAACU,EAAOC,GAAW,IACtBC,EAAgCF,EAAhCE,OAAQC,EAAwBH,EAAxBG,MAAOC,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OAC7B,OACE,4BACE,kBAAC,EAAD,CACEC,IAAKL,EACL/B,GAAImC,EACJvB,MAAOqB,EACPtB,OAAQqB,EACRnB,KAAMqB,EACN5C,wBAAyBA,EACzBC,WAAYA,EACZuB,cAAeA,EACfE,cAAeA,EACfD,gBAAiBA,EACjBE,MAAO,WCNVoB,EArCS,SAACjD,GAAW,IAC1B2B,EAAmC3B,EAAnC2B,gBAAiBC,EAAkB5B,EAAlB4B,cADQ,EAEWxB,mBAASuB,GAFpB,mBAE1BuB,EAF0B,KAEVC,EAFU,KAMjC,OAHArB,qBAAU,WACRqB,EAAkBxB,KACjB,CAACA,IAEF,yBAAKpB,UAAU,2BACb,gDAC2B,IAA1B2C,EAAenB,QACd,kEAEDmB,EAAenB,OAAS,GACvB,wBAAIxB,UAAU,uBACX2C,EAAelB,KAAI,SAACE,EAASS,GAAW,IAC/BpB,EAA4BW,EAA5BX,OAAQC,EAAoBU,EAApBV,MAAOC,EAAaS,EAAbT,KAAMb,EAAOsB,EAAPtB,GAC7B,OACE,4BACE,kBAAC,EAAD,CACEoC,IAAKL,EACLpB,OAAQA,EACRC,MAAOA,EACPZ,GAAIA,EACJa,KAAMA,EACNG,cAAeA,EACfD,gBAAiBuB,EACjBrB,MAAO,W,gBCyBVuB,EAjDQ,SAACpD,GAAW,IACzBqD,EAAsBrD,EAAtBqD,kBAER,OACE,6BAAS9C,UAAU,kBACjB,kBAAC,WAAD,CACE+C,YAAY,EACZC,cAAc,EACdC,UAAU,EACVC,WAAW,EACXC,eAAe,EACfC,YAAY,GAEXN,EAAkBO,MAAM,EAAG,GAAG5B,KAAI,SAACC,EAAQU,GAAW,IAC7CnB,EAAyBS,EAAzBT,MAAOD,EAAkBU,EAAlBV,OAAQM,EAAUI,EAAVJ,MACvB,OACE,yBAAKtB,UAAU,2BACb,wBAAIA,UAAU,cACZ,wBAAIA,UAAU,oBACZ,yBAAKA,UAAU,8BACD,QAAXgB,EACC,yBACEY,IAAKC,EAAQ,IACbC,IAAG,sBAAiBb,KAGtB,yBAAKW,IAAKZ,EAAQc,IAAG,sBAAiBb,OAI5C,wBAAIjB,UAAU,yBACZ,yBAAKA,UAAU,cACb,+BAAKoC,EAAQ,GACb,2BACE,uBAAGpC,UAAU,iBACZsB,GAEH,uBAAGtB,UAAU,YAAYiB,aChC9BqC,EARA,WACb,OACE,yBAAKtD,UAAU,UACb,gECWSuD,EAdA,WACb,OACE,4BAAQvD,UAAU,cAChB,8DAGE,uBAAGwD,KAAK,4BAA4B9C,OAAO,SAA3C,oB,sBCKR+C,IAASC,cAVc,CACrBC,OAAQ,0CACRC,WAAY,iCACZC,YAAa,wCACbC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,cACnBC,MAAO,6CAKMR,QAAf,E,iBCyceS,G,MA1cH,WAAM,MAGcrE,mBAAS,IAHvB,mBAGToC,EAHS,KAGAkC,EAHA,OAKsBtE,oBAAS,GAL/B,mBAKTuE,EALS,KAKIC,EALJ,OAO0BxE,mBAAS,IAPnC,mBAOTmC,EAPS,KAOMsC,EAPN,OAQoBzE,oBAAS,GAR7B,mBAQTD,EARS,KAQG2E,EARH,OASkC1E,mBAAS,IAT3C,mBASTiD,EATS,KASU0B,EATV,OAWgB3E,mBAAS,IAXzB,mBAWT4E,EAXS,KAWCC,EAXD,OAa8B7E,mBAAS,IAbvC,mBAaTuB,EAbS,KAaQuD,EAbR,OAewB9E,oBAAS,GAfjC,mBAeT+E,EAfS,KAeKC,EAfL,KAkBVC,EAAcC,IAAKC,MAAM,CAC7BC,mBAAoB,YAMtB1D,qBAAU,WACMkC,EAASyB,WAAWC,MAC5BC,GAAG,SAAS,SAACC,GACjB,IAAMC,EAAkBD,EAASE,MAAMC,eACjCC,EAAqB,GAC3B,IAAK,IAAIhD,KAAO6C,EACVA,EAAgB7C,GAAKnB,MAAQ,GAC/BmE,EAAmBC,KAAKJ,EAAgB7C,IAO5C,GAHAgD,EAAmBE,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEvE,MAAQsE,EAAEtE,SAC9CkD,EAAqBiB,IAEF,IAAf7F,EAAqB,CACvB,IAAMkG,EAAyB,GACzBC,EAAQV,EAASE,MAAMQ,MAC7B,IAAK,IAAItD,KAAOsD,EACd,GAAIA,EAAMtD,GAAKuD,WAAavB,EAAU,CACpC,GAAIsB,EAAMtD,GAAKuD,SAASC,YAAa,CAEY,IAA3CF,EAAMtD,GAAKuD,SAASC,YAAYzE,QAClCqD,GAAgB,GAGlB,IACE,IAAIqB,EAAI,EACRA,EAAIH,EAAMtD,GAAKuD,SAASC,YAAYzE,OAAS,EAC7C0E,IAEAJ,EAAuBJ,KAAKK,EAAMtD,GAAKuD,SAASC,YAAYC,IAGhEvB,EAAmBmB,GACnB,aAKP,IAGHvE,qBAAU,WAAM,4CACd,4BAAAqE,EAAA,sEACuBO,KADvB,cACMC,EADN,yBAESA,GAFT,4CADc,uBAAC,WAAD,gCAKdC,GAAkBC,MAAK,SAACC,SACvB,CAAC9B,IAEJ,IAyBMvC,EAAc,WAClBmC,GAAe,GACfC,EAAiB,KAGbkC,EAAmB,WAEnBpF,EAAgBI,QAAU,EAC5BqD,GAAgB,GAEhBA,GAAgB,IAId1D,EAAgB,SAACQ,GACrB,IAAM8E,EAAQhD,EAASyB,WAAWC,MAC9BuB,EAAU,GAuBd,GAtBAF,KAGqB,IAAjB5B,EACF6B,EAAME,KAAK,SAAS,SAACtB,GACnB,IAAMuB,EAAOvB,EAASE,MAAMQ,MAC5B,IAAK,IAAItD,KAAOmE,EACd,GAAInC,EAASoC,gBAAkBD,EAAKnE,GAAKuD,SAASa,cAAe,CAC/DH,EAAUjE,EACV,UAKNqC,EAAYgC,KAAK,CACfC,kBAAkB,EAClBC,KAAM,QACN/F,MAAO,UACPgG,KACE,qEAGU,KAAZP,EAAgB,CAClB,IAAMQ,EAAiB9F,EACvB8F,EAAexB,KAAK/D,GACJ8E,EAAMU,MAAM,SAASA,MAAMT,GACnCU,OAAO,CAAEnB,YAAaiB,IAC9BG,EAAqB1F,EAAS,SAI5BN,EAAgB,SAACM,GACrB,IAAM8E,EAAQhD,EAASyB,WAAWC,MAC9BuB,EAAU,GACdD,EAAME,KAAK,SAAS,SAACtB,GACnB,IAAMuB,EAAOvB,EAASE,MAAMQ,MAC5B,IAAK,IAAItD,KAAOmE,EACd,GAAInC,EAASoC,gBAAkBD,EAAKnE,GAAKuD,SAASa,cAAe,CAC/DH,EAAUjE,EACV,UAKN,IAAMyE,EAAiB9F,EAAgBkG,QAAO,SAAC5F,GAC7C,OAAOA,EAAOrB,KAAOsB,EAAQtB,MAG/BsE,EAAmBuC,GACHT,EAAMU,MAAM,SAASA,MAAMT,GACnCU,OAAO,CAAEnB,YAAaiB,IAC9BG,EAAqB1F,EAAS,UAC9BkD,GAAgB,IAIZwC,EAAuB,SAAC1F,EAAS1B,GAAY,IACzCe,EAA4BW,EAA5BX,OAAQC,EAAoBU,EAApBV,MAAOC,EAAaS,EAAbT,KAAMb,EAAOsB,EAAPtB,GACvBoG,EAAQhD,EAASyB,WAAWC,MAC5BoC,EAAYd,EAAMU,MAAM,kBAC1BK,EAAS,GACTC,EAAY,EAChBhB,EAAME,KAAK,SAAS,SAACtB,GACnB,IAAMuB,EAAOvB,EAASE,MAAMC,eAC5B,IAAK,IAAI/C,KAAOmE,EACd,GAAIjF,EAAQtB,KAAOuG,EAAKnE,GAAKpC,GAAI,CAC/BmH,EAAS/E,EACTgF,EAAYb,EAAKnE,GAAKnB,MACtB,UAIS,KAAXkG,GAA4B,WAAXvH,GAAuBwH,EAAY,EACtDF,EAAUJ,MAAMK,GAAQJ,OAAO,CAAE9F,MAAOmG,EAAY,IAChC,KAAXD,GAA4B,QAAXvH,EAC1BsH,EAAUJ,MAAMK,GAAQJ,OAAO,CAAE9F,MAAOmG,EAAY,IAEpDF,EAAU7B,KAAK,CACb1E,OAAQA,EACRC,MAAOA,EACPC,KAAMA,EACNb,GAAIA,EACJiB,MAAO,KAKP3B,EAA0B,YACX,IAAfC,EAEF8H,OAAOC,SAASC,QAAO,GAEvB9C,EACGgC,KAAK,CACJC,kBAAkB,EAClB9F,MAAM,sBACN4G,kBAAkB,EAClBC,kBAAkB,UAClBC,iBAAiB,aAElBzB,MAAK,SAAC0B,GACDA,EAAOrH,MACTsH,GAAkB,WACTD,EAAOE,UAAYpD,EAAYqD,cAAcC,QACtDH,GAAkB,gBAMtBA,GAAiB,uCAAG,WAAOI,GAAP,yBAAAzC,EAAA,sDAEpBI,EAAW,GACXsC,EAAW,GACTC,EAAc,WAClBzD,EACGgC,KAAK,CACJC,kBAAkB,EAClB9F,MAAOoH,EACPG,KAAK,4GAAD,OAA0GxC,EAA1G,8FAAsMsC,EAAtM,uCACJT,kBAAkB,EAClBC,kBAAmBO,EACnBI,WAAY,iBAAO,CACjBC,KAAMC,SAASC,eAAe,YAAYjI,MAC1CkI,KAAMF,SAASC,eAAe,YAAYjI,UAG7C2F,MAAK,SAAC0B,GACL,GAAIA,EAAOrH,MAAO,CAAC,IAAD,EACOqH,EAAOrH,MAAtB+H,EADQ,EACRA,KAAMG,EADE,EACFA,KAGd,GAFA7C,EAAW0C,EACXJ,EAAWO,EACE,KAATH,GAAwB,KAATG,EACjBC,EAAU,GAAG,qCAEb,GAAmB,aAAfT,GAA2B,uCAC7B,4BAAAzC,EAAA,sEACuBmD,GAAa/C,EAAUsC,GAD9C,cACMU,EADN,yBAESA,GAFT,2CAD6B,qDAK7BC,GAAoB3C,MAAK,SAAC4C,IACX,IAAbA,EACIJ,EAAU,GAAG,4BACbA,EAAU,GAAG,oCAEd,GAAmB,YAAfT,EAA0B,yCACnC,4BAAAzC,EAAA,sEACuBuD,GAAUnD,EAAUsC,GAD3C,cACMc,EADN,yBAESA,GAFT,2CADmC,qDAKnCC,GAAa/C,MAAK,SAAC4C,IACJ,IAAbA,EACIJ,EAAU,GAAG,2BACbA,EAAU,GAAG,yCAIdd,EAAOE,QAAYpD,EAAYqD,cAAcC,YA9CxDU,EAAY,IAkDRpD,KAAK6C,GAETe,EAAmB,SAACC,GACxBzE,EACGgC,KAAK,CACJC,kBAAkB,EAClBC,KAAM,QACN/F,MAAO,UACPgG,KAAMsC,EACN1B,kBAAkB,EAClBE,iBAAkB,SAEnBzB,MAAK,SAAC0B,GACDA,EAAOE,UAAYpD,EAAYqD,cAAcC,QAC/CU,EAAU,SAIlBA,EAAUpD,KAAK4D,GAETE,EAAqB,SAACC,GAC1B3E,EAAYgC,KAAK,CACfC,kBAAkB,EAClBC,KAAM,UACN/F,MAAO,UACPgG,KAAMwC,EACN5B,kBAAkB,KAGtBiB,EAAUpD,KAAK8D,GAGfV,EAAU,KAnFc,4CAAH,sDAuFjB3C,GAAuB,uCAAG,4BAAAP,EAAA,6DAC1B8D,EAAW,GADe,SAEVjG,EACjByB,WACAC,MACAwB,KAAK,SAAS,SAACtB,GAEd,IAAMuB,EAAOvB,EAASE,MAAMQ,MAC5B,IAAK,IAAItD,KAAOmE,EAEVnC,EAASoC,gBAAkBD,EAAKnE,GAAKuD,SAASa,eAC5CD,EAAKnE,GAAKwD,cACZtB,EAAmBiC,EAAKnE,GAAKwD,aAC7ByD,EAAWtI,MAbS,uCAkBvBsI,GAlBuB,2CAAH,qDAsBvBX,GAAY,uCAAG,WAAO/C,EAAUsC,GAAjB,eAAA1C,EAAA,6DACf+D,GAAe,EADA,SAEClG,EACjByB,WACAC,MACAwB,KAAK,SAAS,SAACtB,GAEd,IAAMuB,EAAOvB,EAASE,MAAMQ,MAC5B,IAAK,IAAItD,KAAOmE,EAEd,GAAIZ,EAASa,gBAAkBD,EAAKnE,GAAKuD,SAASa,cAAe,CAC/D8C,GAAe,EACf,OAGiB,IAAjBA,IACalG,EAASyB,WAAWC,IAAI,UAChCO,KAAK,CACVM,SAAUA,EACVsC,SAAUA,EACVrC,YAAa,KAEfvB,EAAYsB,GACZzB,GAAc,OAvBD,uCA0BZoF,GA1BY,2CAAH,wDA8BZR,GAAS,uCAAG,WAAOnD,EAAUsC,GAAjB,eAAA1C,EAAA,6DACZgE,GAAgB,EADJ,SAEInG,EACjByB,WACAC,MACAwB,KAAK,SAAS,SAACtB,GAEd,IAAMuB,EAAOvB,EAASE,MAAMQ,MAC5B,IAAK,IAAItD,KAAOmE,EAEZZ,IAAaY,EAAKnE,GAAKuD,UACvBsC,IAAa1B,EAAKnE,GAAK6F,WAEvB5D,EAAYsB,GACZzB,GAAc,GACdiC,IACAoD,GAAgB,MAhBR,uCAoBTA,GApBS,2CAAH,wDAuBf,OACE,yBAAK5J,UAAU,OACb,kBAAC,EAAD,CACEJ,WAAYA,EACZF,aA9Te,SAACS,EAAGL,GACvBqE,EAAW,IACXE,GAAe,GACflE,EAAE0J,iBACFC,IAAM,CACJC,IAAK,sDACLC,OAAQ,MACRC,aAAc,OACdC,OAAQ,CACNC,EAAGrK,EACHsK,KAAM,QACN9J,KAAM,WAEPgG,MAAK,SAAC+D,GACqB,qBAAxBA,EAASzD,KAAK0D,MAChBhG,EAAiB,sCAAD,OAAuCxE,KAEvDwE,EAAiB,SAAD,OACL+F,EAASzD,KAAK2D,OAAO/I,OADhB,0BACwC1B,IAExDqE,EAAWkG,EAASzD,KAAK2D,aA2SzBrI,YAAaA,EACbvC,wBAAyBA,IAE1BmD,EAAkBtB,OAAS,IAAqB,IAAhB4C,GAC/B,kBAAC,EAAD,CACEzE,wBAAyBA,EACzBmD,kBAAmBA,KAGN,IAAhBsB,GACC,kBAAC,EAAD,CACEnC,QAASA,EACTD,cAAeA,EACfrC,wBAAyBA,EACzBwB,cAAeA,EACfvB,WAAYA,EACZwB,gBAAiBA,EACjBc,YAAaA,EACbb,cAAeA,KAGD,IAAjBuD,GAAyB,kBAAC,EAAD,OACT,IAAhBR,IAAwC,IAAfxE,GACxB,kBAAC,EAAD,CACEwB,gBAAiBA,EACjBC,cAAeA,KAGF,IAAhB+C,GACC,6BAASpE,UAAU,6BACjB,kDACA,yBAAKA,UAAU,yBACZ8C,EAAkBrB,KAAI,SAACC,EAAQU,GAAW,IAE/BpB,EAKNU,EALFV,OACOC,EAILS,EAJFT,MACIZ,EAGFqB,EAHFrB,GACMa,EAEJQ,EAFFR,KACOI,EACLI,EADFJ,MAEF,OACE,kBAAC,EAAD,CACEmB,IAAKL,EACL/B,GAAIA,EACJY,MAAOA,EACPD,OAAQA,EACRE,KAAMA,EACNvB,wBAAyBA,EACzBC,WAAYA,EACZuB,cAAeA,EACfE,cAAeA,EACfD,gBAAiBA,EACjBE,MAAOA,SAOnB,kBAAC,EAAD,SCvcckJ,QACW,cAA7B9C,OAAOC,SAAS8C,UAEe,UAA7B/C,OAAOC,SAAS8C,UAEhB/C,OAAOC,SAAS8C,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFlC,SAASC,eAAe,SDyHpB,kBAAmBkC,WACrBA,UAAUC,cAAcC,MACrB1E,MAAK,SAAA2E,GACJA,EAAaC,gBAEdC,OAAM,SAAA5B,GACL6B,QAAQ7B,MAAMA,EAAM8B,c","file":"static/js/main.28545447.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noImageAvailable.625d1aff.jpg\";","import React, { useState } from \"react\";\r\n\r\nconst Navigation = (props) => {\r\n  const { handleSearch, handleSignInAndRegister, isLoggedIn } = props;\r\n  // checks for when user clicks to search\r\n  const [userSearching, setUserSearching] = useState(false);\r\n  const [query, setQuery] = useState(\"\");\r\n  //   toggle the default title or search style navigation\r\n  const toggleSearch = () => {\r\n    setUserSearching(!userSearching);\r\n  };\r\n\r\n  const handleInput = (e) => {\r\n    setQuery(e.target.value);\r\n  };\r\n\r\n  const defferedSearch = (e) => {\r\n    handleSearch(e, query);\r\n  };\r\n\r\n  return (\r\n    <nav className=\" flexParent flexColumn navigation\">\r\n      <h1>Reel Vote</h1>\r\n      <p>Nominate your 5 all time favourite movies!</p>\r\n      <div className=\"flexParent menuOptions\">\r\n        <div className=\"flexParent searchContainer\">\r\n          <form className=\"flexParent\" action=\"\" onSubmit={defferedSearch}>\r\n            <label htmlFor=\"movieSearch\"></label>\r\n            <input\r\n              id=\"movieSearch\"\r\n              className=\"movieSearch\"\r\n              type=\"search\"\r\n              required\r\n              placeholder=\"Search movies\"\r\n              onChange={handleInput}\r\n            />\r\n            <button className=\"searchButton\" type=\"submit\">\r\n              <i className=\"fas fa-search\"></i>\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <button className=\"account\" onClick={handleSignInAndRegister}>\r\n          {isLoggedIn === false ? \"Sign In/Up\" : \"Sign Out\"}\r\n        </button>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst MovieOption = (props) => {\r\n  const [isNominee, setIsNominee] = useState(false);\r\n\r\n  const {\r\n    poster,\r\n    title,\r\n    year,\r\n    id,\r\n    handleSignInAndRegister,\r\n    addNomination,\r\n    isLoggedIn,\r\n    userNominations,\r\n    removeNominee,\r\n    tally,\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    if (userNominations.length > 0) {\r\n      userNominations.map((nomObj) => {\r\n        if (nomObj.id === id) {\r\n          setIsNominee(true);\r\n        }\r\n      });\r\n    }\r\n  }, [userNominations]);\r\n\r\n  const handleNominate = () => {\r\n    if(userNominations.length<5 === true){\r\n      setIsNominee(true);\r\n    } else {\r\n      setIsNominee(false);\r\n    }\r\n    addNomination(nominee);\r\n  };\r\n\r\n  const handleRemoveNominee = () => {\r\n    removeNominee(nominee);\r\n    setIsNominee(false);\r\n  };\r\n\r\n  const nominee = {\r\n    poster: poster,\r\n    title: title,\r\n    id: id,\r\n    year: year,\r\n    tally: tally,\r\n  };\r\n  return (\r\n    <ul className=\"flexParent flexColumn movieOption\">\r\n      <li className=\"flexParent imgContainer\">\r\n        {\r\n          // if ther is no pic than put default no image available\r\n          poster === \"N/A\" ? (\r\n            <img\r\n              src={require(\"../assets/noImageAvailable.jpg\")}\r\n              alt={`Poster for: ${title}`}\r\n            />\r\n          ) : (\r\n            <img src={poster} alt={`Poster for: ${title}`} />\r\n          )\r\n        }\r\n        <div className=\"movieDetails\">\r\n          <h3>{title}</h3>\r\n          <p>{year}</p>\r\n        </div>\r\n      </li>\r\n      {tally > 0 && (\r\n        <li className=\"flexParent tally\">\r\n          <i className=\"fas fa-award\"></i>\r\n          <p>{tally}</p>\r\n        </li>\r\n      )}\r\n      <li className=\"nominateButton\">\r\n        {isNominee === true && (\r\n          <button className=\"swal2-styled\" onClick={handleRemoveNominee}>\r\n            Remove\r\n          </button>\r\n        )}\r\n        {isNominee === false && (\r\n          <button\r\n            className=\"swal2-styled\"\r\n            onClick={\r\n              isLoggedIn === true ? handleNominate : handleSignInAndRegister\r\n            }\r\n          >\r\n            Nominate\r\n          </button>\r\n        )}\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default MovieOption;\r\n","import React from \"react\";\r\nimport MovieOption from \"./MovieOption\";\r\n\r\nconst SearchResults = (props) => {\r\n  const {\r\n    searchMessage,\r\n    results,\r\n    handleSignInAndRegister,\r\n    isLoggedIn,\r\n    addNomination,\r\n    removeNominee,\r\n    userNominations,\r\n    closeSearch,\r\n  } = props;\r\n\r\n  const handleCloseSearch = () => {\r\n    closeSearch();\r\n  };\r\n\r\n  return (\r\n    <section className=\"wrapper\">\r\n      <h2>{searchMessage}</h2>\r\n      <div className=\"flexParent closeContainer\">\r\n        <p>Tap \"X\" to close! </p>\r\n        <button className=\"toggleSearch\" onClick={handleCloseSearch}>\r\n          <i className=\"fas fa-times\"></i>\r\n        </button>\r\n      </div>\r\n      {results.length > 0 && (\r\n        <ul className=\"flexParent flexWrap\">\r\n          {\" \"}\r\n          {results.map((movie, index) => {\r\n            const { Poster, Title, Year, imdbID } = movie;\r\n            return (\r\n              <li>\r\n                <MovieOption\r\n                  key={index}\r\n                  id={imdbID}\r\n                  title={Title}\r\n                  poster={Poster}\r\n                  year={Year}\r\n                  handleSignInAndRegister={handleSignInAndRegister}\r\n                  isLoggedIn={isLoggedIn}\r\n                  addNomination={addNomination}\r\n                  removeNominee={removeNominee}\r\n                  userNominations={userNominations}\r\n                  tally={0}\r\n                />\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SearchResults;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport MovieOption from \"./MovieOption.js\";\r\n\r\nconst UserNominations = (props) => {\r\n  const { userNominations, removeNominee } = props;\r\n  const [theNominations, setTheNominations] = useState(userNominations);\r\n  useEffect(() => {\r\n    setTheNominations(userNominations);\r\n  }, [userNominations]);\r\n  return (\r\n    <div className=\"wrapper userNominations\">\r\n      <h2>Your Nominations</h2>\r\n      {theNominations.length === 0 && (\r\n        <p>You havent picked any nominees yet!</p>\r\n      )}\r\n      {theNominations.length > 0 && (\r\n        <ul className=\"flexParent flexWrap\">\r\n          {theNominations.map((nominee, index) => {\r\n            const { poster, title, year, id } = nominee;\r\n            return (\r\n              <li>\r\n                <MovieOption\r\n                  key={index}\r\n                  poster={poster}\r\n                  title={title}\r\n                  id={id}\r\n                  year={year}\r\n                  removeNominee={removeNominee}\r\n                  userNominations={theNominations}\r\n                  tally={0}\r\n                />\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserNominations;\r\n","import React from \"react\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport { Carousel } from \"react-responsive-carousel\";\r\n\r\n// carosel for the top nominations\r\nconst TopNominations = (props) => {\r\n  const { publicNominations } = props;\r\n\r\n  return (\r\n    <section className=\"topNominations\">\r\n      <Carousel\r\n        showArrows={true}\r\n        infiniteLoop={true}\r\n        autoPlay={true}\r\n        swipeable={true}\r\n        dynamicHeight={false}\r\n        showStatus={false}\r\n      >\r\n        {publicNominations.slice(0, 5).map((nomObj, index) => {\r\n          const { title, poster, tally } = nomObj;\r\n          return (\r\n            <div className=\"flexParent topContainer\">\r\n              <ul className=\"flexParent\">\r\n                <li className=\"flexParent imgLI\">\r\n                  <div className=\"flexParent topImgContainer\">\r\n                    {poster === \"N/A\" ? (\r\n                      <img\r\n                        src={require(\"../assets/noImageAvailable.jpg\")}\r\n                        alt={`Poster for: ${title}`}\r\n                      />\r\n                    ) : (\r\n                      <img src={poster} alt={`Poster for: ${title}`} />\r\n                    )}\r\n                  </div>\r\n                </li>\r\n                <li className=\"topDetails flexParent\">\r\n                  <div className=\"detailCard\">\r\n                    <p>#{index + 1}</p>\r\n                    <p>\r\n                      <i className=\"fas fa-award\"></i>\r\n                      {tally}\r\n                    </p>\r\n                    <p className=\"topTitle\">{title}</p>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          );\r\n        })}\r\n      </Carousel>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default TopNominations;\r\n","import React from \"react\";\r\n\r\nconst Banner = () => {\r\n  return (\r\n    <div className=\"banner\">\r\n      <h2>Max Nominations Limit Reached!</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"flexParent\">\r\n      <p>\r\n        © 2020 Designed and Coded\r\n        by:\r\n        <a href=\"https://kajanthkumar.com/\" target=\"blank\">\r\n          Kajanth Kumar\r\n        </a>\r\n      </p>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCku0CL-1JzPVdi-8qzYwUJifsPzKbgsRc\",\r\n  authDomain: \"shoppies-116db.firebaseapp.com\",\r\n  databaseURL: \"https://shoppies-116db.firebaseio.com\",\r\n  projectId: \"shoppies-116db\",\r\n  storageBucket: \"shoppies-116db.appspot.com\",\r\n  messagingSenderId: \"76445350094\",\r\n  appId: \"1:76445350094:web:189725267c077875eb789f\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport axios from \"axios\";\r\nimport Navigation from \"./components/Navigation\";\r\nimport SearchResults from \"./components/SearchResults\";\r\nimport MovieOption from \"./components/MovieOption\";\r\nimport UserNominations from \"./components/UserNominations\";\r\nimport TopNominations from \"./components/TopNominations\";\r\nimport Banner from \"./components/Banner\";\r\nimport Footer from \"./components/Footer\";\r\nimport firebase from \"./components/Firebase\";\r\nimport swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nconst App = () => {\r\n  // state variables\r\n  // search results\r\n  const [results, setResults] = useState([]);\r\n  // check if user is searching\r\n  const [isSearching, setIsSearching] = useState(false);\r\n  // message informing if there were any results\r\n  const [searchMessage, setSearchMessage] = useState(\"\");\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [publicNominations, setPublicNominations] = useState([]);\r\n  // current username\r\n  const [currUser, setCurrUser] = useState(\"\");\r\n  // current users nominations\r\n  const [userNominations, setUserNominations] = useState([]);\r\n  // boolean to check if user has 5 nominees assume not full\r\n  const [fiveNominees, setFiveNominees] = useState(false);\r\n\r\n  // sweet alert defaults\r\n  const swalShopify = swal.mixin({\r\n    confirmButtonColor: \"#004C3F\",\r\n  });\r\n\r\n  // functions\r\n\r\n  // function to run when component mounts (ie gather user data and new nominations)\r\n  useEffect(() => {\r\n    const dbRef = firebase.database().ref();\r\n    dbRef.on(\"value\", (snapshot) => {\r\n      const nominationsdata = snapshot.val().allNominations;\r\n      const updatedNominations = [];\r\n      for (let key in nominationsdata) {\r\n        if (nominationsdata[key].tally > 0) {\r\n          updatedNominations.push(nominationsdata[key]);\r\n        }\r\n      }\r\n      //sort public nominations by votes\r\n      updatedNominations.sort((a, b) => b.tally - a.tally);\r\n      setPublicNominations(updatedNominations);\r\n      // update loggedin users personal nominations\r\n      if (isLoggedIn === true) {\r\n        const updatedUserNominations = [];\r\n        const users = snapshot.val().users;\r\n        for (let key in users) {\r\n          if (users[key].username === currUser) {\r\n            if (users[key].username.nominations) {\r\n              // check if user has five nominees\r\n              if (users[key].username.nominations.length === 5) {\r\n                setFiveNominees(true);\r\n              }\r\n              // update the nominee list\r\n              for (\r\n                let i = 0;\r\n                i < users[key].username.nominations.length - 1;\r\n                i++\r\n              ) {\r\n                updatedUserNominations.push(users[key].username.nominations[i]);\r\n              }\r\n            }\r\n            setUserNominations(updatedUserNominations);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  // hook to update users page when loggedin\r\n  useEffect(() => {\r\n    async function waitForDownload() {\r\n      let download = await downloadUserNominations();\r\n      return download;\r\n    }\r\n    waitForDownload().then((status) => {});\r\n  }, [currUser]);\r\n\r\n  const handleSearch = (e, query) => {\r\n    setResults([]);\r\n    setIsSearching(true);\r\n    e.preventDefault();\r\n    axios({\r\n      url: \"http://www.omdbapi.com/?i=tt3896198&apikey=5f442a30\",\r\n      method: \"GET\",\r\n      responseType: \"json\",\r\n      params: {\r\n        s: query,\r\n        plot: \"Short\",\r\n        type: \"movie\",\r\n      },\r\n    }).then((response) => {\r\n      if (response.data.Error === \"Movie not found!\") {\r\n        setSearchMessage(`Sorry, could not find results for: ${query}`);\r\n      } else {\r\n        setSearchMessage(\r\n          `Found ${response.data.Search.length} results for : ${query}`\r\n        );\r\n        setResults(response.data.Search);\r\n      }\r\n    });\r\n  };\r\n\r\n  const closeSearch = () => {\r\n    setIsSearching(false);\r\n    setSearchMessage(\"\");\r\n  };\r\n\r\n  const checkNominations = () => {\r\n    // this is my hacky solution to make it work\r\n    if (userNominations.length >= 4) {\r\n      setFiveNominees(true);\r\n    } else {\r\n      setFiveNominees(false);\r\n    }\r\n  };\r\n\r\n  const addNomination = (nominee) => {\r\n    const dbRef = firebase.database().ref();\r\n    let userKey = \"\";\r\n    checkNominations();\r\n\r\n    // if not full nominations\r\n    if (fiveNominees === false) {\r\n      dbRef.once(\"value\", (snapshot) => {\r\n        const data = snapshot.val().users;\r\n        for (let key in data) {\r\n          if (currUser.toUpperCase() === data[key].username.toUpperCase()) {\r\n            userKey = key;\r\n            break;\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      swalShopify.fire({\r\n        scrollbarPadding: false,\r\n        icon: \"error\",\r\n        title: \"Oops...\",\r\n        text:\r\n          \"You cant nominate more than 5 times! Please remove a nomination.\",\r\n      });\r\n    }\r\n    if (userKey !== \"\") {\r\n      const newNominations = userNominations;\r\n      newNominations.push(nominee);\r\n      const userRef = dbRef.child(\"users\").child(userKey);\r\n      userRef.update({ nominations: newNominations });\r\n      updateAllNominations(nominee, \"add\");\r\n    }\r\n  };\r\n\r\n  const removeNominee = (nominee) => {\r\n    const dbRef = firebase.database().ref();\r\n    let userKey = \"\";\r\n    dbRef.once(\"value\", (snapshot) => {\r\n      const data = snapshot.val().users;\r\n      for (let key in data) {\r\n        if (currUser.toUpperCase() === data[key].username.toUpperCase()) {\r\n          userKey = key;\r\n          break;\r\n        }\r\n      }\r\n    });\r\n\r\n    const newNominations = userNominations.filter((nomObj) => {\r\n      return nomObj.id !== nominee.id;\r\n    });\r\n\r\n    setUserNominations(newNominations);\r\n    const userRef = dbRef.child(\"users\").child(userKey);\r\n    userRef.update({ nominations: newNominations });\r\n    updateAllNominations(nominee, \"remove\");\r\n    setFiveNominees(false);\r\n  };\r\n\r\n  // function to update the tallies on all nominations from all users\r\n  const updateAllNominations = (nominee, action) => {\r\n    const { poster, title, year, id } = nominee;\r\n    const dbRef = firebase.database().ref();\r\n    const allNomRef = dbRef.child(\"allNominations\");\r\n    let nomKey = \"\";\r\n    let prevTally = 0;\r\n    dbRef.once(\"value\", (snapshot) => {\r\n      const data = snapshot.val().allNominations;\r\n      for (let key in data) {\r\n        if (nominee.id === data[key].id) {\r\n          nomKey = key;\r\n          prevTally = data[key].tally;\r\n          break;\r\n        }\r\n      }\r\n    });\r\n    if (nomKey !== \"\" && action === \"remove\" && prevTally > 0) {\r\n      allNomRef.child(nomKey).update({ tally: prevTally - 1 });\r\n    } else if (nomKey !== \"\" && action === \"add\") {\r\n      allNomRef.child(nomKey).update({ tally: prevTally + 1 });\r\n    } else {\r\n      allNomRef.push({\r\n        poster: poster,\r\n        title: title,\r\n        year: year,\r\n        id: id,\r\n        tally: 1,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSignInAndRegister = () => {\r\n    if (isLoggedIn === true) {\r\n      // reloads page if user wants to signout\r\n      window.location.reload(true);\r\n    } else {\r\n      swalShopify\r\n        .fire({\r\n          scrollbarPadding: false,\r\n          title: `Sign In or Register`,\r\n          showCancelButton: true,\r\n          confirmButtonText: `Sign In`,\r\n          cancelButtonText: `Register`,\r\n        })\r\n        .then((result) => {\r\n          if (result.value) {\r\n            credentialsPrompt(\"Sign In\");\r\n          } else if (result.dismiss === swalShopify.DismissReason.cancel) {\r\n            credentialsPrompt(\"Register\");\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  const credentialsPrompt = async (signMethod) => {\r\n    const promptArr = [];\r\n    let username = \"\";\r\n    let password = \"\";\r\n    const credentials = () => {\r\n      swalShopify\r\n        .fire({\r\n          scrollbarPadding: false,\r\n          title: signMethod,\r\n          html: `<input id='username' class=\"swal2-input\" required type='email' placeholder=\"your username ...\" value=${username}> <br/> <input class=\"swal2-input\" required id='password' type='password' value='${password}' placeholder=\"your password ...\">`,\r\n          showCancelButton: true,\r\n          confirmButtonText: signMethod,\r\n          preConfirm: () => ({\r\n            user: document.getElementById(\"username\").value,\r\n            pass: document.getElementById(\"password\").value,\r\n          }),\r\n        })\r\n        .then((result) => {\r\n          if (result.value) {\r\n            const { user, pass } = result.value;\r\n            username = user;\r\n            password = pass;\r\n            if (user === \"\" || pass === \"\") {\r\n              promptArr[1](\"You can't have empty fields!\");\r\n            } else {\r\n              if (signMethod === \"Register\") {\r\n                async function validRegistration() {\r\n                  let checkReg = await registerUser(username, password);\r\n                  return checkReg;\r\n                }\r\n                validRegistration().then((validity) => {\r\n                  validity === true\r\n                    ? promptArr[2](\"Registered Successfully!\")\r\n                    : promptArr[1](\"Username already exists!\");\r\n                });\r\n              } else if (signMethod === \"Sign In\") {\r\n                async function validLogin() {\r\n                  let checkLog = await logUserIn(username, password);\r\n                  return checkLog;\r\n                }\r\n                validLogin().then((validity) => {\r\n                  validity === true\r\n                    ? promptArr[2](\"Signed In Successfully!\")\r\n                    : promptArr[1](\"Incorrect Username/Password!\");\r\n                });\r\n              }\r\n            }\r\n          } else if (result.dismiss === swalShopify.DismissReason.cancel) {\r\n          }\r\n        });\r\n    };\r\n    promptArr.push(credentials);\r\n\r\n    const credentialsError = (error) => {\r\n      swalShopify\r\n        .fire({\r\n          scrollbarPadding: false,\r\n          icon: \"error\",\r\n          title: \"Oops...\",\r\n          text: error,\r\n          showCancelButton: true,\r\n          cancelButtonText: \"Back\",\r\n        })\r\n        .then((result) => {\r\n          if (result.dismiss === swalShopify.DismissReason.cancel) {\r\n            promptArr[0]();\r\n          }\r\n        });\r\n    };\r\n    promptArr.push(credentialsError);\r\n\r\n    const credentialsSuccess = (success) => {\r\n      swalShopify.fire({\r\n        scrollbarPadding: false,\r\n        icon: \"success\",\r\n        title: \"Success\",\r\n        text: success,\r\n        showCancelButton: false,\r\n      });\r\n    };\r\n    promptArr.push(credentialsSuccess);\r\n\r\n    // to call a function just promptArr[desiredCall](params)\r\n    promptArr[0]();\r\n  };\r\n\r\n  // downloads the users nominations\r\n  const downloadUserNominations = async () => {\r\n    let newStuff = [];\r\n    const dbRef = await firebase\r\n      .database()\r\n      .ref()\r\n      .once(\"value\", (snapshot) => {\r\n        // in the data go to the users key\r\n        const data = snapshot.val().users;\r\n        for (let key in data) {\r\n          // when they log in set each users nominations\r\n          if (currUser.toUpperCase() === data[key].username.toUpperCase()) {\r\n            if (data[key].nominations) {\r\n              setUserNominations(data[key].nominations);\r\n              newStuff = userNominations;\r\n            }\r\n          }\r\n        }\r\n      });\r\n    return newStuff;\r\n  };\r\n\r\n  // function to register new users with unique usernames returns true if a username is available and has now been registered successfully\r\n  const registerUser = async (username, password) => {\r\n    let usernameFree = true;\r\n    const dbref = await firebase\r\n      .database()\r\n      .ref()\r\n      .once(\"value\", (snapshot) => {\r\n        // in the data go to the users key\r\n        const data = snapshot.val().users;\r\n        for (let key in data) {\r\n          // since ther is no ignoreCase method in javaScript use upper instead\r\n          if (username.toUpperCase() === data[key].username.toUpperCase()) {\r\n            usernameFree = false;\r\n            break;\r\n          }\r\n        }\r\n        if (usernameFree === true) {\r\n          const dbRef2 = firebase.database().ref(\"users/\");\r\n          dbRef2.push({\r\n            username: username,\r\n            password: password,\r\n            nominations: [],\r\n          });\r\n          setCurrUser(username);\r\n          setIsLoggedIn(true);\r\n        }\r\n      });\r\n    return usernameFree;\r\n  };\r\n\r\n  //function to verify login\r\n  const logUserIn = async (username, password) => {\r\n    let correctSignIn = false;\r\n    const dbref = await firebase\r\n      .database()\r\n      .ref()\r\n      .once(\"value\", (snapshot) => {\r\n        // in the data go to the users key\r\n        const data = snapshot.val().users;\r\n        for (let key in data) {\r\n          if (\r\n            username === data[key].username &&\r\n            password === data[key].password\r\n          ) {\r\n            setCurrUser(username);\r\n            setIsLoggedIn(true);\r\n            checkNominations();\r\n            correctSignIn = true;\r\n          }\r\n        }\r\n      });\r\n    return correctSignIn;\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Navigation\r\n        isLoggedIn={isLoggedIn}\r\n        handleSearch={handleSearch}\r\n        closeSearch={closeSearch}\r\n        handleSignInAndRegister={handleSignInAndRegister}\r\n      />\r\n      {publicNominations.length > 0 && isSearching === false && (\r\n        <TopNominations\r\n          handleSignInAndRegister={handleSignInAndRegister}\r\n          publicNominations={publicNominations}\r\n        />\r\n      )}\r\n      {isSearching === true && (\r\n        <SearchResults\r\n          results={results}\r\n          searchMessage={searchMessage}\r\n          handleSignInAndRegister={handleSignInAndRegister}\r\n          addNomination={addNomination}\r\n          isLoggedIn={isLoggedIn}\r\n          userNominations={userNominations}\r\n          closeSearch={closeSearch}\r\n          removeNominee={removeNominee}\r\n        />\r\n      )}\r\n      {fiveNominees === true && <Banner />}\r\n      {isSearching === false && isLoggedIn === true && (\r\n        <UserNominations\r\n          userNominations={userNominations}\r\n          removeNominee={removeNominee}\r\n        />\r\n      )}\r\n      {isSearching === false && (\r\n        <section className=\"wrapper publicNominations\">\r\n          <h2>Public Nominations</h2>\r\n          <div className=\"flexParent publicList\">\r\n            {publicNominations.map((nomObj, index) => {\r\n              const {\r\n                poster: poster,\r\n                title: title,\r\n                id: id,\r\n                year: year,\r\n                tally: tally,\r\n              } = nomObj;\r\n              return (\r\n                <MovieOption\r\n                  key={index}\r\n                  id={id}\r\n                  title={title}\r\n                  poster={poster}\r\n                  year={year}\r\n                  handleSignInAndRegister={handleSignInAndRegister}\r\n                  isLoggedIn={isLoggedIn}\r\n                  addNomination={addNomination}\r\n                  removeNominee={removeNominee}\r\n                  userNominations={userNominations}\r\n                  tally={tally}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </section>\r\n      )}\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}